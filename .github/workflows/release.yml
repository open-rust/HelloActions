name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    name: build ${{ matrix.file }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        file:
          - ${{ github.event.repository.name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      # 构建文件路径, Windows 平台有 .exe 后缀
      NAME: ${{ format('target/release/{0}{1}', matrix.file, startsWith(matrix.os, 'windows') && '.exe' || '') }}
      # 上传制品文件名
      ARTIFACT_NAME: Binary-${{ matrix.file }}-${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive # 递归检出git子模块(submodules)

      - name: Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ~/.rustup
            ./target
          key: ${{ runner.os }}-${{ env.file }}-cache

      - name: Build
        env:
          CARGO_TERM_COLOR: always
        run: cargo build --release --verbose

      - name: Naming ${{ env.NEW_NAME }}
        id: naming
        env:
          NEW_NAME: >-
            ${{ format('target/release/{0}-{1}-{2}-{3}{4}',
              matrix.file, github.ref_name, runner.os, runner.arch, startsWith(matrix.os, 'windows') && '.exe' || '') }}
        run: |
          export NAME="$( echo ${{ env.NEW_NAME }} | tr [:upper:] [:lower:] )"
          echo "FILENAME=$NAME" >> $GITHUB_OUTPUT

      - name: Rename file
        run: |
          mv $NAME ${{ steps.naming.outputs.FILENAME }}

      - name: Upload
        uses: actions/upload-artifact@master
        id: artifact-upload-step
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ steps.naming.outputs.FILENAME }}

      - name: GH Release on ${{ matrix.os }}
        uses: softprops/action-gh-release@v2.0.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ steps.naming.outputs.FILENAME }}

      - name: Done
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "### [${{ github.ref_name }}](https://github.com/$GITHUB_REPOSITORY/releases/tag/${{ github.ref_name }}) Released! :rocket:" \
            >> $GITHUB_STEP_SUMMARY

permissions:
  contents: write